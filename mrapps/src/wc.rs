// use crate::mr::worker::KeyValue;

// The map function is called once for each file of input. The first
// argument is the name of the input file, and the second is the
// file's complete contents. You should ignore the iput file name,
// and look only at the contents argument. The return value is a vec
// of key/value pairs
// pub fn map(_filename: String, contents: String) -> Vec<KeyValue> {
//     let mut kvs = vec![];
//
//     for word in contents.split_whitespace() {
//         let kv = KeyValue {
//             key: word.to_string(),
//             value: "1".to_string(),
//         };
//
//         kvs.push(kv);
//     }
//
//     kvs
// }

// The reduce function is called once for each key generated by the
// map tasks, with a list of all the values created for that key by
// any map task
pub fn reduce(_key: String, values: Vec<String>) -> String {
    values.len().to_string()
}
